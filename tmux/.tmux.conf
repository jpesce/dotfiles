# set -g default-terminal "xterm-256color"
set -g default-terminal "tmux-256color"

# Start windows and panes at 1, not 0 because 0 is the last key in the keyboard
set -g base-index 1
setw -g pane-base-index 1

# When last shell is (CTRL+D)estroyed, go to next session
set-option -g detach-on-destroy off

# Don't rename windows automatically
set-option -g allow-rename off

# Don't wait when pressing <Esc> — important for leaving modes quicker in vi.
set -sg escape-time 10

# Enable mouse (useful for resizing panes)
set -g mouse on

# {{{ Remaps and custom commands
# Remap leader from <C-b> to <C-Space>
unbind C-b
set-option -g prefix C-Space
bind C-Space send-prefix

# Reload config file with <Leader-r>
bind r source-file ~/.tmux.conf

# <Leader-S> to synchronize panes (i.e. send the same key strokes to all panes)
bind -r S setw synchronize-panes

# Vi bindings
set-window-option -g mode-keys vi
# v for fisual mode
bind-key -T copy-mode-vi v send-keys -X begin-selection
# y to yank
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'

# Window switching with <Meta-Shift-H> and <Meta-Shift-L>
bind -n 'M-H' previous-window
bind -n 'M-L' next-window

# Pane switching with <Meta-hjkl> (Meta = Option)
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" 'send-keys M-h'  'select-pane -L'
bind-key -n 'M-j' if-shell "$is_vim" 'send-keys M-j'  'select-pane -D'
bind-key -n 'M-k' if-shell "$is_vim" 'send-keys M-k'  'select-pane -U'
bind-key -n 'M-l' if-shell "$is_vim" 'send-keys M-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys M-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'M-h' select-pane -L
bind-key -T copy-mode-vi 'M-j' select-pane -D
bind-key -T copy-mode-vi 'M-k' select-pane -U
bind-key -T copy-mode-vi 'M-l' select-pane -R
bind-key -T copy-mode-vi 'M-\' select-pane -l

# Pane resizing with <Leader><C-hjkl>
bind -r C-k resize-pane -U
bind -r C-j resize-pane -D
bind -r C-h resize-pane -L
bind -r C-l resize-pane -R

# | and - split windows vertically and horizontally
# New windows and splits stay on current path
bind c new-window      -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# }}}

# {{{ Style
# Pane borders
set -g pane-border-style fg=brightblack
set -g pane-active-border-style fg=white

# Command styles (when pressing <leader>:)
set -g message-style bg=default,fg=default
set -g message-command-style bg=default,fg=colour7
set -g mode-style bg=colour15,fg=black
# }}}

# {{{ Status line
# Add an empty line below status line
set -g status 2
set -g status-format[1] ''

set -g status-position top
set -g status-justify centre
set -g status-style bg=default,fg=white,align=centre

set -g window-status-format '  #W  '
set -g window-status-current-style fg=brightwhite
set -g window-status-current-format '  #W  '
set -g window-status-separator ''

# Show indicators of zoom and leader key
set -g status-left-length 30
set -g status-left-style default
set -g status-left '#{?client_prefix,⎵  ,   }#{?window_zoomed_flag,⤢  ,   }#{?pane_synchronized,↹ ,  }                    '

# Show git info
set -g status-right-length 30
set -g status-right-style default
set -g status-right '#(~/Projects/dotfiles/tmux/status/status_right.sh #{pane_current_path})'
# }}}

# vim: fdm=marker
